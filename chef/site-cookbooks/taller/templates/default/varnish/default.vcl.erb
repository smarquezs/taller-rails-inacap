backend default {
    .host = "<%= node['varnish']['backend_host'] %>";
    .port = "<%= node['varnish']['backend_port'] %>";
}

sub vcl_recv {
    if (req.request == "ADPURGE") {
      ban("req.url ~ " + req.url);
      error 200 "Purged." + req.url;
    }

    if (req.url ~ "^/catalog" || req.url ~ "^/auth" || req.url ~ "^/produtos" || req.url ~ "^/wp-content" || req.url ~ "^/wp-includes" || req.request == "POST") {
      return (pass);
    }

    unset req.http.Cookie;
    return(lookup);
}

sub vcl_fetch {
    if (req.url == "/") {
      set beresp.ttl = 600 s;
    }
    else if (req.url ~ "^/category" || req.url ~ "^/tag") {
      set beresp.ttl = 1800 s;
    }
    else if (req.url ~ "^/author") {
      set beresp.ttl = 3600 s;
    }
    else if (req.url ~ "^/[0-9]*\-[0-9]*/.*/.*/") {
      set beresp.ttl = 72 h;
    }
    else if (req.url ~ "^/feed") {
      set beresp.ttl = 600 s;
    }
    else {
      set beresp.ttl = 24 h;
    }

    set req.http.x-varnish-ttl = beresp.ttl;
    set beresp.http.Vary = "AD-Vary";

    return(deliver);
}

sub vcl_hit {
  set req.http.x-varnish-ttl = obj.ttl;
  return (deliver);
}

sub vcl_deliver {
  # The below provides custom headers to indicate whether the response came from
  # varnish cache or directly from the app.
  if (obj.hits > 0) {
    set resp.http.X-Varnish-Main-Cache = "HIT";
    set resp.http.X-Varnish-Main-Expires = req.http.x-varnish-ttl;
  } else {
    set resp.http.X-Varnish-Main-Cache = "MISS";
  }
}